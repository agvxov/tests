/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.params.*;
import org.junit.jupiter.params.provider.*;

class AppTest {
    @Test
    void new_ageclassificator() {
        var a = new AgeClassificator();
    }

    @Test
    void new_myinterval() {
        var a = new MyInterval(1, 10);
    }

    @Test
    void interval_lookup() {
        var a = new MyInterval(1, 10);

        assertTrue(a.equals(3));
    }

    @Test
    void actualnaming() {
        var a = new ActualNaming();
        var b = new MockNaming();
        a.actualNaming(b);

        assertTrue(b.was_calledback);
    }

    @ParameterizedTest
    @CsvSource({
        "0, csecsemő",
        "1, csecsemő",
        "2, kisgyerek",
        "6, kisgyerek",
        "7, gyerek",
        "12, gyerek",
        "13, tini",
        "18, tini",
        "19, fiatal_felnőtt",
        "21, fiatal_felnőtt",
        "22, felnőtt",
        "65, felnőtt",
        "66, idős",
        "120, idős"
    })
    void test(int age, String expectedName) throws Exception {
        var c = new AgeClassificator();
        var a = new ActualNaming();
        a.actualNaming(c);

        assertEquals(expectedName, c.GetClass(age));
    }

    @ParameterizedTest
    @CsvSource({
        "-1",
        "121",
    })
    void test(int age) {
        var c = new AgeClassificator();
        var a = new ActualNaming();
        a.actualNaming(c);

        assertThrows(Exception.class, () -> { c.GetClass(age); });
    }
}
