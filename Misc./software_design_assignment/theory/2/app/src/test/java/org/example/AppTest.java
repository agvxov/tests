/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import java.util.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import java.lang.reflect.Field;

class AppTest {
    @Test
    void new_fibo() {
        var f = new Fibo();
    }

    @Test
    void fibo() {
        var f = new Fibo();
        assertEquals(f.getFibo(6), 13);
    }

    @Test
    void fibomem() {
        var f = new FiboMemoizing();
        assertEquals(f.getFibo(6), 13);
    }


    @Test
    void fibomem_private_state() throws Exception {
        Map<Integer, Integer> expected_cache = Map.of(
            2, 2,
            3, 3,
            4, 5,
            5, 8,
            6, 13
        );

        FiboMemoizing f = new FiboMemoizing();
        f.getFibo(6);

        Field fibMapField = FiboMemoizing.class.getDeclaredField("cache");
        fibMapField.setAccessible(true);

        @SuppressWarnings("unchecked")
        HashMap<Integer, Integer> cache = (HashMap<Integer, Integer>)fibMapField.get(f);

        assertEquals(cache, expected_cache);
    }
}
